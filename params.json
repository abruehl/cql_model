{"name":"CQL Model","tagline":"An ActiveModel implementation on top of the cql-rb gem.","body":"cql_model provides an ActiveModel implementation on top of the cql-rb gem. It\r\nis intended to provide the functionality needed to utilize Cassandra as an\r\nActiveModel compatible data store.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n    gem 'cql_model'\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install cql_model\r\n\r\n## Usage\r\n\r\n    require 'cql_model'\r\n\r\n    Cql::Base.establish_connection(host: '127.0.0.1')\r\n\r\n    class Person < Cql::Model\r\n      primary_key :id\r\n\r\n      column :first_name, String\r\n      column :last_name, String\r\n      column :dob, Date\r\n    end\r\n\r\n### Schema Definition\r\n\r\nWhile Cassandra doesn't get super picky about schemas you should understand how\r\nyou're storing your data. To help with this you should define the primary key\r\nand the columns you care about within your model.\r\n\r\n#### Primary Key\r\n\r\nDefining the primary key determines which column the id-oriented finders will\r\nwork with. The default primary key is `id`.\r\n\r\n    primary_key :id\r\n    primary_key 'card_number'\r\n\r\n#### Columns\r\n\r\nYou define columns by supplying the attribute name, Ruby class for type\r\nconversion and an optional set of options.\r\n\r\n    column :first_name, String\r\n    column :birth_date, Date\r\n    column :birth_date, Date, column_name: :dob\r\n\r\nThe supported options for columns are as follows:\r\n\r\n* `column_name`: actual column name for storing the attribute.\r\n\r\n## Contributing\r\n\r\n1. Fork it\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create new Pull Request\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}